from pysat.solvers import Glucose3, Solver
mat = [
[1, 11,100,10,101,102,103,104,105,109],
[0,2,11,12,109],
[1,3,12,13,109],
[2,4,13,14,109],
[3,5,14,15,109],
[4,6,15,16,109],
[5,7,16,17,109],
[6,8,17,18,109],
[7,9,18,19,109],
[8,19,109],
[0,105,106,107,108,109],
[0, 1, 12, 22,90,100],
[1,2,11,13,22,23],
[2,3,12,14,23,24],
[3,4,13,15,24,25],
[4,5,14,16,25,26],
[5,6,15,17,26,27],
[6,7,16,18,27,28],
[7,8,17,19,28,29],
[8,9,18,29,98,109],
[88,99,21,30,31],
[20,99,31,32,89],
[11,12,23,33,80,90],
[12,13,22,24,33,34],
[13,14,23,25,34,35],
[14,15,24,26,35,36],
[15,16,25,27,36,37],
[16,17,26,28,37,38],
[17,18,27,29,38,39],
[18,19,28,39,87,98],
[20,31,40,41,77,88],
[20,21,30,32,41,42],
[21,31,42,43,79,89],
[22,23,34,44,70,80],
[23,24,33,35,44,45],
[24,25,34,36,45,46],
[25,26,35,37,46,47],
[26,27,36,38,47,48],
[27,28,37,39,48,49],
[28,29,38,49,76,87],
[66,77,30,41,50,51],
[30,31,40,42,51,52],
[31,32,41,43,52,53],
[32,42,53,54,79,69],
[33,34,45,55,60,70],
[34,35,44,46,55,56],
[35,36,45,47,56,57],
[36,37,46,48,57,58],
[37,38,47,49,58,59],
[38,39,48,59,65,76],
[40,51,60,61,55,66],
[40,41,50,52,61,62],
[41,42,51,53,62,63],
[42,43,52,54,63,64],
[43,53,64,65,69,59],
[44,45,56,66,50,60],
[45,46,55,57,66,67],
[46,47,56,58,67,68],
[47,48,57,59,68,69],
[48,49,58,69,54,65],
[50,61,70,71,44,55],
[50,51,60,62,71,72],
[51,52,61,63,72,73],
[52,53,62,64,73,74],
[53,54,63,65,74,75],
[54,64,75,76,59,49],
[55,56,67,77,50,40],
[56,57,66,68,77,78],
[57,58,67,69,78,79],
[58,59,68,79,43,54],
[71,80,81,60,33,44],
[60,61,70,72,81,82],
[61,62,71,73,82,83],
[62,63,72,74,83,84],
[63,64,73,75,84,85],
[64,65,74,76,85,86],
[65,75,86,87,39,49],
[66,67,78,88,30,40],
[67,68,77,79,88,89],
[68,69,78,89,32,43],
[70,81,91,90,22,33],
[70,71,80,82,91,92],
[71,72,81,83,92,93],
[72,73,82,84,93,94],
[73,74,83,85,94,95],
[74,75,84,86,95,96],
[75,76,85,87,96,97],
[76,86,97,98,29,39],
[77,78,89,99,20,30],
[78,79,88,99,21,32],
[80,91,101,100,11,22],
[80,81,90,92,101,102],
[81,82,91,93,102,103],
[82,83,92,94,103,104],
[83,84,93,95,104,105],
[84,85,94,96,105,106],
[85,86,95,97,106,107],
[86,87,96,98,107,108],
[87,97,108,109,19,29],
[88,89,20,21],
[0,11,90,101],
[90,91,100,102,0],
[91,92,101,103,0],
[92,93,102,104,0],
[93,94,103,105,0],
[94,95,104,106,0,10],
[95,96,105,107,10],
[96,97,106,108,10],
[97,98,107,109,10],
[10,108,98,19,9,8,7,6,5,4,3,2,1,0]

]
g=Glucose3()
for i in range(110):
    g.add_clause([i*4+1,i*4+2,i*4+3,i*4+4])
    g.add_clause([i*4+1,i*4+2,-(i*4+3),-(i*4+4)])
    g.add_clause([i*4+1,-(i*4+2),i*4+3,-(i*4+4)])
    g.add_clause([i*4+1,-(i*4+2),-(i*4+3),i*4+4])
    g.add_clause([i*4+1,-(i*4+2),-(i*4+3),-(i*4+4)])
    g.add_clause([-(i*4+1),i*4+2,i*4+3,-(i*4+4)])
    g.add_clause([-(i*4+1),i*4+2,-(i*4+3),i*4+4])
    g.add_clause([-(i*4+1),i*4+2,-(i*4+3),-(i*4+4)])
    g.add_clause([-(i*4+1),-(i*4+2),i*4+3,i*4+4])
    g.add_clause([-(i*4+1),-(i*4+2),i*4+3,-(i*4+4)])
    g.add_clause([-(i*4+1),-(i*4+2),-(i*4+3),i*4+4])
    g.add_clause([-(i*4+1),-(i*4+2),-(i*4+3),-(i*4+4)])
    for j in mat[i]:
        g.add_clause([-(i*4+1),-(j*4+1)])
        g.add_clause([-(i*4+2),-(j*4+2)])
        g.add_clause([-(i*4+3),-(j*4+3)])
        g.add_clause([-(i*4+4),-(j*4+4)])
print(g.solve())
print(g.get_model())
res=g.get_model()
for i in range(110):
    if res[i*4]>0:
        print(i,": red")
    elif res[i*4+1]>0:
        print(i,": blue")
    elif res[i*4+2]>0:
        print(i,": green")
    elif res[i*4+3]>0:
        print(i,": yellow")
    else:
        print("incorrect")
